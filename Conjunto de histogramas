# Código para plotar histogramas conjuntos para todos os testes individualmente
import matplotlib.pyplot as plt
import numpy as np

def plot_hist(resultados, *samples):
    # Número de amostras
    n_samples = len(samples)

    # Calcula o número de linhas e colunas para os subplots
    # Aqui, estamos tentando manter a grade o mais quadrada possível
    n_cols = int(np.ceil(np.sqrt(n_samples)))
    n_rows = int(np.ceil(n_samples / n_cols))

    # Cria uma figura grande para acomodar todos os histogramas
    fig, axs = plt.subplots(n_rows, n_cols, figsize=(5*n_cols, 4*n_rows))

    # Ajusta os subplots para evitar sobreposição
    plt.tight_layout()

    # Itera sobre todas as amostras e os respectivos eixos
    for i, sample in enumerate(samples):

        # Encontra o eixo atual onde o histograma será plotado
        if n_samples == 1:
            ax = axs
        elif n_rows == 1 or n_cols == 1:
            ax = axs[i]
        else:
            ax = axs[i // n_cols, i % n_cols]

        # Plota o histograma da amostra atual no eixo atual
        ax.hist(sample, bins=20, alpha=0.75)
        ax.set_title(f'amostra{i} {resultados[i]}')

    # Esconde os eixos extras se o número de amostras não preencher a grade
    for i in range(n_samples, n_rows * n_cols):
        fig.delaxes(axs.flatten()[i])

    plt.show()
